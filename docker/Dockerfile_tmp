FROM python:3.9.8

ENV https_proxy "http://proxy-sen.noc.sony.co.jp:10080"
ENV http_proxy "http://proxy-sen.noc.sony.co.jp:10080"

RUN apt update \
    && apt install -y curl libgl1-mesa-dev cmake

WORKDIR /app
COPY ["./app/pyproject.toml", "/app/"]

# install poetry to python environment
ENV POETRY_HOME=/opt/poetry
RUN curl -sSL https://install.python-poetry.org | POETRY_HOME=/opt/poetry python3 -
ENV PATH="/opt/poetry/bin:$PATH" 
RUN poetry config virtualenvs.create false \
    && poetry install

# jupyter to use extension (especially hinterland)
# RUN jupyter contrib nbextension install â€“user \
#     && jupyter nbextensions_configurator enable --user

# g2o eigen
# dependencies to g2o
RUN apt update \
    && apt install -y libsuitesparse-dev qtdeclarative5-dev qt5-qmake libqglviewer-dev-qt5

RUN wget https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz \
    && tar xvf eigen-3.3.7.tar.gz \
    && rm -rf eigen-3.3.7.tar.gz \
    && cd eigen-3.3.7 \
    && mkdir build \
    && cd build \
    && cmake -DCMAKE_BUILD_TYPE=Release .. \
    && make -j8 install

# g2o
ARG G2O_COMMIT=20230223_git
RUN set -x && \
    git clone https://github.com/RainerKuemmerle/g2o.git && \
    cd g2o && \
    git checkout ${G2O_COMMIT} && \
    mkdir -p build && \
    cd build && \
    cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DBUILD_SHARED_LIBS=ON \
        -DBUILD_UNITTESTS=OFF \
        -DG2O_USE_CHOLMOD=OFF \
        -DG2O_USE_CSPARSE=ON \
        -DG2O_USE_OPENGL=OFF \
        -DG2O_USE_OPENMP=OFF \
        -DG2O_BUILD_APPS=OFF \
        -DG2O_BUILD_EXAMPLES=OFF \
        -DG2O_BUILD_LINKED_APPS=OFF \
        .. && \
    make -j${NUM_THREADS} && \
    make install && \


